#!/usr/bin/env bash

set -o pipefail -eux

main() {
  credhub_admin_secret=$(bosh int "${CREDFILE}" --path "/credhub_admin_client_secret")
  credhub_api_url="https://$(bosh int "${VARFILE}" --path "/internal_ip"):8844"
  credhub login --client-name credhub-admin --client-secret "${credhub_admin_secret}" \
    -s "${credhub_api_url}" \
    --ca-cert <(bosh int "${CREDFILE}" --path="/credhub_tls/ca") \
    --ca-cert <(bosh int "${CREDFILE}" --path="/uaa_ssl/ca") 1>/dev/null

  cluster="$(bosh int "${VARFILE}" --path=/director_name)/${DEPLOYMENT_NAME}"
  host="$(bosh int "${VARFILE}" --path=/kubernetes_master_host)"
  port="$(bosh int "${VARFILE}" --path=/kubernetes_master_port)"
  api_url="https://${host}:${port}"

  tmp_ca_file="$(mktemp)"
  bosh int <(credhub get -n "${cluster}/tls-kubernetes" --output-json) --path=/value/ca > "${tmp_ca_file}"
  admin_password=$(bosh int <(credhub get -n "${cluster}/kubo-admin-password" --output-json) --path=/value)

  cluster_name="cfcr/${cluster}"
  user_name="${cluster_name}/cfcr-admin"
  context_name="${cluster_name}"

  kubectl config set-cluster "${cluster_name}" --server="${api_url}" --certificate-authority="${tmp_ca_file}" --embed-certs=true
  kubectl config set-credentials "${user_name}" --token="${admin_password}"
  kubectl config set-context "${context_name}" --cluster="${cluster_name}" --user="${user_name}"
  kubectl config use-context "${context_name}"
}

main
